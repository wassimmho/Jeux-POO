using System;

namespace Game
{
    public abstract class Personnage : IAttaquable
    {
        protected string Nom { get; set; }
        protected int PointsDeVie { get; set; }
        protected int Degats { get; set; }
        protected int Niveau { get; set; }
        protected int Experience { get; set; }
        private bool CompetenceUtilisee;

        public Personnage(string nom, int pointsDeVie, int degats)
        {
            Nom = nom;
            PointsDeVie = pointsDeVie;
            Degats = degats;
            Niveau = 1;
            Experience = 0;
            CompetenceUtilisee = false;
        }

        public void RecevoirDegats(int degats)
        {
            PointsDeVie -= degats;
            Console.WriteLine($"{Nom} received {degats} points of damage. Remaining health-bar: {PointsDeVie}");
        }

        public bool EstVivant()
        {
            return PointsDeVie > 0;
        }

        public string GetNom()
        {
            return Nom;
        }

        public void GagnerExperience(int xp)
        {
            Experience += xp;
            if (Experience >= 100)
            {
                Niveau++;
                Experience = 0;
                Console.WriteLine($"{Nom} hit the level {Niveau}!");
                Degats += 5;
                ReinitialiserCompetence();
            }
        }

        public void UtiliserCompetence()
        {
            CompetenceUtilisee = true;
        }

        public bool AUtiliseCompetence()
        {
            return CompetenceUtilisee;
        }

        public void ReinitialiserCompetence()
        {
            CompetenceUtilisee = false;
        }
    }
}
